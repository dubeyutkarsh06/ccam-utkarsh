version: '3'

networks:
  default:
    external:
      name: backend_backend

services:
  database:
    build:
      context: ./Database
      dockerfile: Dockerfile
    restart: on-failure
    hostname: database
    environment:
      - MYSQL_DATABASE=sump
    expose:
      - "3306"

  backend:
    depends_on:
      - database
    restart: on-failure
    build:
      context: ./Backend
      dockerfile: Dockerfile
      args:
        - JWT_SECRET=${JWT_SECRET}
    environment:
      - TYPEORM_CONNECTION=${TYPEORM_CONNECTION}
      - TYPEORM_HOST=${TYPEORM_HOST}
      - TYPEORM_USERNAME=${TYPEORM_USERNAME}
      - TYPEORM_PASSWORD=${TYPEORM_PASSWORD}
      - TYPEORM_DATABASE=${TYPEORM_DATABASE}
      - TYPEORM_PORT=${TYPEORM_PORT}
      - TYPEORM_ENTITIES=${TYPEORM_ENTITIES}
      - JWT_SECRET=${JWT_SECRET}
    expose:
      - "3000"
    labels:
      - 'traefik.http.routers.sump-backend.rule=Host(`${URL}.page.ima.rwth-aachen.de`) && PathPrefix(`/api/`)'
      - 'traefik.http.services.sump-backend.loadbalancer.server.port=3000'


  frontend:
    depends_on:
      - backend
    restart: on-failure
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    expose:
      - "80"
    labels:
      - 'traefik.http.routers.sump.rule=Host(`${URL}.page.ima.rwth-aachen.de`)'
